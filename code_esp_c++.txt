#include <ESP8266WiFi.h>
#include <WebSocketsServer.h>
#include <SPI.h>
#include <MFRC522.h>

// Configuration Wi-Fi
const char* ssid = "4G-MIFI-BD26";       // Remplace par ton SSID
const char* password = "yagami04";       // Remplace par ton mot de passe

// Configuration RFID
#define RST_PIN D3
#define SS_PIN D4
MFRC522 rfid(SS_PIN, RST_PIN);

// Configuration WebSocket
WebSocketsServer webSocket(81);

// Configuration du buzzer
#define BUZZER_PIN D8 // Connecte le buzzer à cette broche

unsigned long lastIpPrintTime = 0; // Variable pour suivre le dernier affichage de l'IP

void setup() {
  Serial.begin(115200);
  SPI.begin();
  rfid.PCD_Init();

  // Configuration du buzzer
  pinMode(BUZZER_PIN, OUTPUT);
  digitalWrite(BUZZER_PIN, LOW); // Assure-toi que le buzzer est éteint au départ

  // Connexion au Wi-Fi
  WiFi.begin(ssid, password);
  Serial.println("Connexion au Wi-Fi...");
  
  // Boucle jusqu'à la connexion
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print("."); 
  }
  
  Serial.println("\nConnecté au Wi-Fi !");
  Serial.print("Adresse IP : ");
  Serial.println(WiFi.localIP());

  // Démarrage du WebSocket
  webSocket.begin();
  webSocket.onEvent(webSocketEvent);
  Serial.println("WebSocket démarré sur le port 81.");
}

void loop() {
  webSocket.loop();

  // Vérifie si une carte est présente
  if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) {
    // Affiche l'IP toutes les 10 secondes
    if (millis() - lastIpPrintTime >= 10000) { // 10 000 ms = 10 secondes
      Serial.print("Adresse IP actuelle : ");
      Serial.println(WiFi.localIP());
      lastIpPrintTime = millis();
    }
    return;
  }

  // Lit l'UID de la carte
  String uid = "";
  for (byte i = 0; i < rfid.uid.size; i++) {
    uid += String(rfid.uid.uidByte[i], HEX);
  }
  uid.toUpperCase();
  Serial.println("UID détecté : " + uid);

  // Envoie l'UID via WebSocket
  webSocket.broadcastTXT(uid);

  // Émet un son avec le buzzer
  digitalWrite(BUZZER_PIN, HIGH); // Active le buzzer
  delay(200);                    // Durée du son (200 ms)
  digitalWrite(BUZZER_PIN, LOW); // Désactive le buzzer

  // Arrête la lecture de la carte
  rfid.PICC_HaltA();
}

// Gestion des événements WebSocket
void webSocketEvent(uint8_t num, WStype_t type, uint8_t* payload, size_t length) {
  if (type == WStype_CONNECTED) {
    Serial.printf("Client connecté : %u\n", num);
  } else if (type == WStype_TEXT) {
    Serial.printf("Message reçu : %s\n", payload);
  }
}
